[{"C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\index.js":"1","C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\reportWebVitals.js":"2","C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\App.tsx":"3","C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\Components\\CustomForm.tsx":"4","C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\UIComponents\\Footer.tsx":"5","C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\UIComponents\\Header.tsx":"6"},{"size":562,"mtime":1609750348177,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1609750348178,"results":"9","hashOfConfig":"8"},{"size":400,"mtime":1609750795037,"results":"10","hashOfConfig":"8"},{"size":19934,"mtime":1609926952057,"results":"11","hashOfConfig":"8"},{"size":298,"mtime":1609750348176,"results":"12","hashOfConfig":"8"},{"size":255,"mtime":1609750348176,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"18akhl8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\index.js",[],["29","30"],"C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\reportWebVitals.js",[],"C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\App.tsx",[],["31","32"],"C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\Components\\CustomForm.tsx",["33","34","35","36","37","38","39","40","41","42","43","44"],"import React, { Component } from \"react\";\r\nimport \"./CustomForm.scss\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\ninterface ICountry {\r\n  name: string;\r\n}\r\ninterface ILanguageCountry {\r\n  languages: Array<ILanguage>;\r\n}\r\n\r\ninterface ILanguage {\r\n  name: string;\r\n}\r\n\r\ninterface countrySelection {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface languageSelection {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface dateBeginSelection {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ntype HtmlEvent = React.ChangeEvent<HTMLSelectElement>;\r\n\r\nclass CustomForm extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      form: {\r\n        name: \"\",\r\n        email: \"\",\r\n        phonenumber: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        gender: null,\r\n        language: [],\r\n        country: null,\r\n        zipCode: \"\",\r\n        description: \"\",\r\n        dateBegin: \"\",\r\n        dateEnd: \"\",\r\n        totalDate: \"\",\r\n        HourBegin: \"\",\r\n        HourEnd: \"\"\r\n      },\r\n      formErrors: {\r\n        name: null,\r\n        email: null,\r\n        phonenumber: null,\r\n        password: null,\r\n        confirmPassword: null,\r\n        gender: null,\r\n        language: null,\r\n        country: null,\r\n        zipCode: null,\r\n        description: \"\",\r\n        dateBegin: \"\",\r\n        dateEnd: \"\",\r\n        totalDate: \"\",\r\n        HourBegin: \"\",\r\n        HourEnd: \"\"\r\n      },\r\n      countryList: Array<string>(),\r\n      languageList: Array<ILanguage>(),\r\n    };\r\n  }\r\n\r\n  validateName = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    var stateAux = { ...this.state };\r\n    stateAux.form.name = evt.target.value;\r\n\r\n    if (evt.currentTarget.value) {\r\n      stateAux.formErrors.name = \"\";\r\n    } else {\r\n      stateAux.formErrors.name = \"Please enter a name\";\r\n    }\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n  validateDescription = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    var stateAux = { ...this.state };\r\n    stateAux.form.description = evt.target.value;\r\n\r\n    if (evt.currentTarget.value) {\r\n      stateAux.formErrors.description = \"\";\r\n    } else {\r\n      stateAux.formErrors.description = \"Please enter a description\";\r\n    }\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n  validateEmail = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const regexp = new RegExp(\r\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    );\r\n    var stateAux = { ...this.state };\r\n    stateAux.form.email = evt.target.value;\r\n\r\n    console.log(regexp.test(evt.currentTarget.value));\r\n    if (regexp.test(evt.currentTarget.value)) {\r\n      stateAux.formErrors.email = \"\";\r\n    } else {\r\n      stateAux.formErrors.email = \"Please enter a valid email\";\r\n    }\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n  hasLowerCase(str: string) {\r\n    return /[a-z]/.test(str);\r\n  }\r\n\r\n  hasUpperCase(str: string) {\r\n    return /[A-Z]/.test(str);\r\n  }\r\n\r\n  hasAtLeastOneDigit(str: string) {\r\n    return /\\d/.test(str);\r\n  }\r\n\r\n  hasAtLeastOneLetter(str: string) {\r\n    return /[a-zA-Z]/.test(str);\r\n  }\r\n\r\n  hasAtLeastOneSpecialCharacter(str: string) {\r\n    var format = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\r\n    return format.test(str);\r\n  }\r\n\r\n  validatePassword = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    var stateAux = { ...this.state };\r\n    const currentPass = evt.target.value;\r\n    stateAux.form.password = currentPass;\r\n\r\n    stateAux.formErrors.password = \"\";\r\n\r\n    if (currentPass.length > 7 && currentPass.length < 31) {\r\n    } else {\r\n      stateAux.formErrors.password +=\r\n        \" Your password must be between 8 and 30 characters \";\r\n    }\r\n    if (\r\n      this.hasAtLeastOneLetter(currentPass) &&\r\n      this.hasLowerCase(currentPass)\r\n    ) {\r\n    } else {\r\n      stateAux.formErrors.password +=\r\n        \" must contain at least one lowercase letter \";\r\n    }\r\n    if (\r\n      this.hasAtLeastOneLetter(currentPass) &&\r\n      this.hasUpperCase(currentPass)\r\n    ) {\r\n    } else {\r\n      stateAux.formErrors.password +=\r\n        \" must contain at least one uppercase, or capital letter \";\r\n    }\r\n\r\n    if (this.hasAtLeastOneDigit(currentPass)) {\r\n    } else {\r\n      stateAux.formErrors.password += \" must contain one digit \";\r\n    }\r\n\r\n    if (this.hasAtLeastOneSpecialCharacter(currentPass)) {\r\n    } else {\r\n      stateAux.formErrors.password += \"  must contain a special character \";\r\n    }\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n  confirmPassword = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    var stateAux = { ...this.state };\r\n    const currentConfirmPassword = evt.target.value;\r\n    stateAux.form.confirmPassword = currentConfirmPassword;\r\n    stateAux.formErrors.confirmPassword = \"\";\r\n    if (stateAux.form.confirmPassword === stateAux.form.password) {\r\n    } else {\r\n      stateAux.formErrors.confirmPassword =\r\n        \"Please make sure your passwords match.\";\r\n    }\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCountries();\r\n    this.getSpokenLanguages();\r\n  }\r\n\r\n  getCountries() {\r\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then((res) => {\r\n      const countries: ICountry[] = res.data;\r\n\r\n      const countryNames: any = [];\r\n\r\n      countries.forEach((countryItem) => {\r\n        countryNames.push(countryItem[\"name\"]);\r\n      });\r\n\r\n      this.setState({ countryList: countryNames });\r\n    });\r\n  }\r\n\r\n  getSpokenLanguages() {\r\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then((res) => {\r\n      const languagesAux: Array<ILanguageCountry> = res.data;\r\n      const spokenLanguages: Array<string> = [];\r\n\r\n      languagesAux.forEach((country) => {\r\n        country.languages.forEach((lang) => {\r\n          if (spokenLanguages.filter((s) => s == lang.name).length == 0) {\r\n            spokenLanguages.push(lang.name);\r\n          }\r\n        });\r\n      });\r\n      spokenLanguages.sort();\r\n      this.setState({ languageList: spokenLanguages });\r\n    });\r\n  }\r\n\r\n  handleCountryChange(e: countrySelection) {\r\n    var stateAux = { ...this.state };\r\n    let selectedCountry = e.value;\r\n    stateAux.form.country = selectedCountry;\r\n\r\n    this.setState({ stateAux });\r\n    this.validateCountrySelection();\r\n  }\r\n\r\n  handleLanguageChange(e: languageSelection) {\r\n    var stateAux = { ...this.state };\r\n    let selectedLanguage = e.value;\r\n   \r\n    stateAux.form.language = selectedLanguage;\r\n    this.setState({ stateAux });\r\n    this.validateLanguageSelection();\r\n  }\r\n\r\n  handleDateBeginChange= (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    var stateAux = { ...this.state };\r\n    let selectedDate = evt.target.value;\r\n    console.log(selectedDate);\r\n    stateAux.form.dateBegin = selectedDate;\r\n    this.setState({ stateAux });\r\n \r\n  }\r\n\r\n  handleDateEndChange= (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    var stateAux = { ...this.state };\r\n    let selectedDate = evt.target.value;\r\n    console.log(selectedDate);\r\n    stateAux.form.dateEnd = selectedDate;\r\n    this.setState({ stateAux });\r\n \r\n  }\r\n\r\n  isValidPhoneNumber(inputtxt: string) {\r\n    var phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{3})$/;\r\n    if (phoneno.test(inputtxt)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  validatePhoneNumber = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    var stateAux = { ...this.state };\r\n    stateAux.form.phonenumber = evt.target.value;\r\n    stateAux.formErrors.phonenumber = \"\";\r\n\r\n    if (this.isValidPhoneNumber(stateAux.form.phonenumber)) {\r\n    } else {\r\n      stateAux.formErrors.phonenumber = \"Please enter a valid phone number.\";\r\n    }\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n  setGender = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    var stateAux = { ...this.state };\r\n    stateAux.form.gender = evt.target.value;\r\n\r\n    this.validateGender();\r\n  };\r\n\r\n  validateGender = () => {\r\n    var stateAux = { ...this.state };\r\n\r\n    if (stateAux.form.gender) {\r\n      stateAux.formErrors.gender = \"\";\r\n    } else {\r\n      stateAux.formErrors.gender = \"Please select a gender\";\r\n    }\r\n\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n  validateCountrySelection() {\r\n    var stateAux = { ...this.state };\r\n    stateAux.formErrors.country = \"\";\r\n    if (stateAux.form.country) {\r\n    } else {\r\n      stateAux.formErrors.country = \"Please select a country!\";\r\n    }\r\n    this.setState({ stateAux });\r\n  }\r\n\r\n  validateLanguageSelection() {\r\n    var stateAux = { ...this.state };\r\n    stateAux.formErrors.language = \"\";\r\n\r\n    if (stateAux.form.language.length > 0) {\r\n      console.log(\"has value!\");\r\n    } else {\r\n      console.log(\"NO value!\");\r\n\r\n      stateAux.formErrors.language = \"Please select a language!\";\r\n    }\r\n    this.setState({ stateAux });\r\n  }\r\n\r\n  validateZipCode = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    /* For now validation is for US Zip codes \r\n    /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/\r\n    */\r\n    var stateAux = { ...this.state };\r\n    const isValidZipCode = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/;\r\n    stateAux.form.zipCode = evt.target.value;\r\n    stateAux.formErrors.zipCode = \"\";\r\n\r\n    if (isValidZipCode.test(evt.target.value)) {\r\n    } else {\r\n      stateAux.formErrors.zipCode =\r\n        \"Please enter a valid zip code! Example: 22313\";\r\n    }\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n\r\n\r\n  requiredFields() {\r\n    var stateAux = { ...this.state };\r\n\r\n    if (!stateAux.form.name) {\r\n      stateAux.formErrors.name = \"Please enter a name\";\r\n    }\r\n    if (!stateAux.form.password && !stateAux.form.confirmPassword) {\r\n      stateAux.formErrors.password = \"Please enter a password\";\r\n      stateAux.formErrors.confirmPassword = \"Please enter a password\";\r\n    }\r\n    if (!stateAux.form.email) {\r\n      stateAux.formErrors.email = \"Please enter an email\";\r\n    }\r\n    if (!stateAux.form.phonenumber) {\r\n      stateAux.formErrors.phonenumber = \"Please enter a phone number\";\r\n    }\r\n    if (!stateAux.formErrors.zipCode) {\r\n      stateAux.formErrors.zipCode = \"Please enter a zip code\";\r\n    }\r\n    if (!stateAux.formErrors.description) {\r\n      stateAux.formErrors.description = \"Please enter a description\";\r\n    }\r\n  }\r\n\r\n  submit = () => {\r\n    this.validateGender();\r\n    this.validateCountrySelection();\r\n    this.validateLanguageSelection();\r\n    this.requiredFields();\r\n  };\r\n\r\n  loadOptions() {}\r\n\r\n  render() {\r\n    const { form, formErrors } = this.state;\r\n    let countryOptions = this.state.countryList.map(function (\r\n      countryName: string\r\n    ) {\r\n      return { value: countryName, label: countryName };\r\n    });\r\n\r\n    let languageOptions = this.state.languageList.map(function (\r\n      languageName: string\r\n    ) {\r\n      return { value: languageName, label: languageName };\r\n    });\r\n\r\n    // console.log(\"countryOptions \" + JSON.stringify(countryOptions));\r\n    // console.log(\"languageOptions \" + JSON.stringify(languageOptions));\r\n    return (\r\n      <>\r\n        <div className=\"signup-box\">\r\n          <h4>Example Form</h4>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Name:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={this.state.form.name}\r\n                  onChange={this.validateName}\r\n                />\r\n                {formErrors.name && (\r\n                  <span className=\"err\">{this.state.formErrors.name}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Email:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  value={form.email}\r\n                  onChange={this.validateEmail}\r\n                />\r\n                {formErrors.email && (\r\n                  <span className=\"err\">{this.state.formErrors.email}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Password:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={this.state.form.password}\r\n                  onChange={this.validatePassword}\r\n                />\r\n                {formErrors.password && (\r\n                  <span className=\"err\">{this.state.formErrors.password}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Confirm Password:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  value={this.state.form.confirmPassword}\r\n                  onChange={this.confirmPassword}\r\n                />\r\n                {this.state.formErrors.confirmPassword && (\r\n                  <span className=\"err\">\r\n                    {this.state.formErrors.confirmPassword}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"mr-3\">\r\n                  Language:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <Select\r\n                  name=\"language\"\r\n                  options={languageOptions}\r\n                  value={this.state.form.selectedLanguage}\r\n                  onChange={(e) => {\r\n                    this.handleLanguageChange({\r\n                      value: e.value,\r\n                      label: e.value,\r\n                    });\r\n                  }}\r\n                />\r\n                {this.state.formErrors.language && (\r\n                  <span className=\"err\">{this.state.formErrors.language}</span>\r\n                )}\r\n\r\n                <div className=\"form-control border-0 p-0 pt-1\"></div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Pick a date<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"start\"\r\n                  name=\"dateBegin\"\r\n                  value={this.state.form.dateBegin}\r\n                  onChange={this.handleDateBeginChange}\r\n                 \r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Phone number:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  name=\"phonenumber\"\r\n                  value={this.state.form.phonenumber}\r\n                  onChange={this.validatePhoneNumber}\r\n                />\r\n                {formErrors.phonenumber && (\r\n                  <span className=\"err\">\r\n                    {this.state.formErrors.phonenumber}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"mr-3\">\r\n                  Gender:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <div className=\"form-control border-0 p-0 pt-1\">\r\n                  <label className=\"mr-2\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      value=\"male\"\r\n                      onChange={this.setGender}\r\n                    />{\" \"}\r\n                    Male\r\n                  </label>\r\n                  <label className=\"mr-2\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      value=\"female\"\r\n                      onChange={this.setGender}\r\n                    />{\" \"}\r\n                    Female\r\n                  </label>\r\n                  <label className=\"mr-2\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      value=\"other\"\r\n                      onChange={this.setGender}\r\n                    />{\" \"}\r\n                    Other\r\n                  </label>\r\n\r\n                  {this.state.formErrors.gender && (\r\n                    <span\r\n                      style={{ clear: \"both\", display: \"block\" }}\r\n                      className=\"err\"\r\n                    >\r\n                      {this.state.formErrors.gender}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Zip Code:</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"zipCode\"\r\n                  value={form.zipCode}\r\n                  onChange={this.validateZipCode}\r\n                />\r\n                {this.state.formErrors.zipCode && (\r\n                  <span className=\"err\">{this.state.formErrors.zipCode}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Country:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <Select\r\n                  name=\"country\"\r\n                  options={countryOptions}\r\n                  value={this.state.form.selectedCountry}\r\n                  onChange={(e) => {\r\n                    this.handleCountryChange({\r\n                      value: e.value,\r\n                      label: e.value,\r\n                    });\r\n                  }}\r\n                />\r\n                {this.state.formErrors.country && (\r\n                  <span className=\"err\">{this.state.formErrors.country}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Description:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  style={{ resize: \"none\" }}\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  value={this.state.form.description}\r\n                  onChange={this.validateDescription}\r\n                  rows={2}\r\n                />\r\n                {this.state.formErrors.description && (\r\n                  <span className=\"err\">\r\n                    {this.state.formErrors.description}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Pick a date<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"start\"\r\n                  name=\"dateEnd\"\r\n                  value={this.state.form.dateEnd}\r\n                  onChange={this.handleDateEndChange}\r\n                 \r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  value=\"Submit\"\r\n                  onClick={this.submit}\r\n                />\r\n              </div>{\" \"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomForm;\r\n","C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\UIComponents\\Footer.tsx",[],"C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\UIComponents\\Header.tsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":5,"column":10,"nodeType":"51","messageId":"52","endLine":5,"endColumn":22},{"ruleId":"49","severity":1,"message":"53","line":5,"column":24,"nodeType":"51","messageId":"52","endLine":5,"endColumn":34},{"ruleId":"49","severity":1,"message":"54","line":5,"column":36,"nodeType":"51","messageId":"52","endLine":5,"endColumn":41},{"ruleId":"49","severity":1,"message":"55","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":17},{"ruleId":"49","severity":1,"message":"56","line":29,"column":11,"nodeType":"51","messageId":"52","endLine":29,"endColumn":29},{"ruleId":"49","severity":1,"message":"57","line":34,"column":6,"nodeType":"51","messageId":"52","endLine":34,"endColumn":15},{"ruleId":"58","severity":1,"message":"59","line":106,"column":17,"nodeType":"60","messageId":"61","endLine":106,"endColumn":18,"suggestions":"62"},{"ruleId":"58","severity":1,"message":"59","line":106,"column":42,"nodeType":"60","messageId":"61","endLine":106,"endColumn":43,"suggestions":"63"},{"ruleId":"58","severity":1,"message":"59","line":137,"column":35,"nodeType":"60","messageId":"61","endLine":137,"endColumn":36,"suggestions":"64"},{"ruleId":"58","severity":1,"message":"65","line":137,"column":52,"nodeType":"60","messageId":"61","endLine":137,"endColumn":53,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":221,"column":47,"nodeType":"69","messageId":"70","endLine":221,"endColumn":49},{"ruleId":"67","severity":1,"message":"68","line":221,"column":68,"nodeType":"69","messageId":"70","endLine":221,"endColumn":70},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'createStyles' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'TextField' is defined but never used.","'dateBeginSelection' is defined but never used.","'HtmlEvent' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["73","74"],["75","76"],["77","78"],"Unnecessary escape character: \\/.",["79","80"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"messageId":"81","fix":"82","desc":"83"},{"messageId":"84","fix":"85","desc":"86"},{"messageId":"81","fix":"87","desc":"83"},{"messageId":"84","fix":"88","desc":"86"},{"messageId":"81","fix":"89","desc":"83"},{"messageId":"84","fix":"90","desc":"86"},{"messageId":"81","fix":"91","desc":"83"},{"messageId":"84","fix":"92","desc":"86"},"removeEscape",{"range":"93","text":"94"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"95","text":"96"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"97","text":"94"},{"range":"98","text":"96"},{"range":"99","text":"94"},{"range":"100","text":"96"},{"range":"101","text":"94"},{"range":"102","text":"96"},[2523,2524],"",[2523,2523],"\\",[2548,2549],[2548,2548],[3404,3405],[3404,3404],[3421,3422],[3421,3421]]