[{"C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\index.js":"1","C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\reportWebVitals.js":"2","C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\App.tsx":"3","C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\Components\\CustomForm.tsx":"4","C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\UIComponents\\Footer.tsx":"5","C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\UIComponents\\Header.tsx":"6"},{"size":562,"mtime":1609750348177,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1609750348178,"results":"9","hashOfConfig":"8"},{"size":400,"mtime":1609750795037,"results":"10","hashOfConfig":"8"},{"size":11605,"mtime":1609750348175,"results":"11","hashOfConfig":"8"},{"size":298,"mtime":1609750348176,"results":"12","hashOfConfig":"8"},{"size":255,"mtime":1609750348176,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"18akhl8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\index.js",[],["29","30"],"C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\reportWebVitals.js",[],"C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\App.tsx",[],"C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\Components\\CustomForm.tsx",["31","32","33","34","35","36","37"],"import React, { Component } from \"react\";\r\nimport \"./CustomForm.scss\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\nimport { stat } from \"fs\";\r\n\r\ninterface ICountry {\r\n  name: string;\r\n}\r\n\r\nclass CustomForm extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      form: {\r\n        name: \"\",\r\n        email: \"\",\r\n        phonenumber: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        gender: null,\r\n        language: [],\r\n        country: null,\r\n        zipCode: \"\",\r\n      },\r\n      formErrors: {\r\n        name: null,\r\n        email: null,\r\n        phonenumber: null,\r\n        password: null,\r\n        confirmPassword: null,\r\n        gender: null,\r\n        language: null,\r\n        country: null,\r\n      },\r\n      countryList: Array<string>(),\r\n    };\r\n  }\r\n\r\n  validateName = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    var stateAux = { ...this.state };\r\n    stateAux.form.name = evt.target.value;\r\n\r\n    if (evt.currentTarget.value) {\r\n      stateAux.formErrors.name = \"\";\r\n    } else {\r\n      stateAux.formErrors.name = \"Please enter a name\";\r\n    }\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n  validateEmail = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const regexp = new RegExp(\r\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    );\r\n    var stateAux = { ...this.state };\r\n    stateAux.form.email = evt.target.value;\r\n\r\n    console.log(regexp.test(evt.currentTarget.value));\r\n    if (regexp.test(evt.currentTarget.value)) {\r\n      stateAux.formErrors.email = \"\";\r\n    } else {\r\n      stateAux.formErrors.email = \"Please enter a valid email\";\r\n    }\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n  hasLowerCase(str: string) {\r\n    return /[a-z]/.test(str);\r\n  }\r\n\r\n  hasUpperCase(str: string) {\r\n    return /[A-Z]/.test(str);\r\n  }\r\n\r\n  hasAtLeastOneDigit(str: string) {\r\n    return /\\d/.test(str);\r\n  }\r\n\r\n  hasAtLeastOneLetter(str: string) {\r\n    return /[a-zA-Z]/.test(str);\r\n  }\r\n\r\n  hasAtLeastOneSpecialCharacter(str: string) {\r\n    var format = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\r\n    return format.test(str);\r\n  }\r\n\r\n  validatePassword = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    var stateAux = { ...this.state };\r\n    const currentPass = evt.target.value;\r\n    stateAux.form.password = currentPass;\r\n\r\n    stateAux.formErrors.password = \"\";\r\n\r\n    if (currentPass.length > 7 && currentPass.length < 31) {\r\n    } else {\r\n      stateAux.formErrors.password +=\r\n        \" Your password must be between 8 and 30 characters \";\r\n    }\r\n    if (\r\n      this.hasAtLeastOneLetter(currentPass) &&\r\n      this.hasLowerCase(currentPass)\r\n    ) {\r\n    } else {\r\n      stateAux.formErrors.password +=\r\n        \" must contain at least one lowercase letter \";\r\n    }\r\n    if (\r\n      this.hasAtLeastOneLetter(currentPass) &&\r\n      this.hasUpperCase(currentPass)\r\n    ) {\r\n    } else {\r\n      stateAux.formErrors.password +=\r\n        \" must contain at least one uppercase, or capital letter \";\r\n    }\r\n\r\n    if (this.hasAtLeastOneDigit(currentPass)) {\r\n    } else {\r\n      stateAux.formErrors.password += \" must contain one digit \";\r\n    }\r\n\r\n    if (this.hasAtLeastOneSpecialCharacter(currentPass)) {\r\n    } else {\r\n      stateAux.formErrors.password += \"  must contain a special character \";\r\n    }\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n  confirmPassword = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    var stateAux = { ...this.state };\r\n    const currentConfirmPassword = evt.target.value;\r\n    stateAux.form.confirmPassword = currentConfirmPassword;\r\n    stateAux.formErrors.confirmPassword = \"\";\r\n    if (stateAux.form.confirmPassword == stateAux.form.password) {\r\n    } else {\r\n      stateAux.formErrors.confirmPassword =\r\n        \"Please make sure your passwords match.\";\r\n    }\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCountries();\r\n  }\r\n\r\n  getCountries() {\r\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then((res) => {\r\n      const countries: ICountry[] = res.data;\r\n\r\n      const countryNames: any = [];\r\n\r\n      countries.forEach((countryItem) => {\r\n        countryNames.push(countryItem[\"name\"]);\r\n      });\r\n\r\n      this.setState({ countryList: countryNames });\r\n    });\r\n  }\r\n\r\n  handleCountryChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    var formAux = { ...this.state.form };\r\n    formAux.country = e.target.value;\r\n    this.setState({ formAux });\r\n    this.setState({ form: { country: e.target.value } });\r\n  }\r\n\r\n  isValidPhoneNumber(inputtxt: string) {\r\n    var phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{3})$/;\r\n    if (phoneno.test(inputtxt)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  validatePhoneNumber = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    var stateAux = { ...this.state };\r\n    stateAux.form.phonenumber = evt.target.value;\r\n    stateAux.formErrors.phonenumber = \"\";\r\n\r\n    if (this.isValidPhoneNumber(stateAux.form.phonenumber)) {\r\n    } else {\r\n      stateAux.formErrors.phonenumber = \"Please enter a valid phone number.\";\r\n    }\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n  setGender = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    var stateAux = { ...this.state };\r\n    stateAux.form.gender= evt.target.value;\r\n\r\n    this.validateGender();\r\n  }\r\n\r\n  validateGender = () => {\r\n    var stateAux = { ...this.state };\r\n  \r\n    if (stateAux.form.gender) {\r\n      stateAux.formErrors.gender = \"\";\r\n    } else {\r\n      stateAux.formErrors.gender = \"Please select a gender\";\r\n    }\r\n\r\n    this.setState({ stateAux });\r\n  };\r\n\r\n  submit= () => {\r\n    this.validateGender();\r\n  }\r\n\r\n\r\n  render() {\r\n    const { form, formErrors, countryList } = this.state;\r\n    let countryOptions = this.state.countryList.map(function (\r\n      countryName: string\r\n    ) {\r\n      return { value: countryName, label: countryName };\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <div className=\"signup-box\">\r\n          <h4>Example Form</h4>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Name:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={form.name}\r\n                  onChange={this.validateName}\r\n                />\r\n                {formErrors.name && (\r\n                  <span className=\"err\">{formErrors.name}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Email:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  value={form.email}\r\n                  onChange={this.validateEmail}\r\n                />\r\n                {formErrors.email && (\r\n                  <span className=\"err\">{formErrors.email}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Password:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={form.password}\r\n                  onChange={this.validatePassword}\r\n                />\r\n                {formErrors.password && (\r\n                  <span className=\"err\">{formErrors.password}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Confirm Password:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  value={form.confirmPassword}\r\n                  onChange={this.confirmPassword}\r\n                />\r\n                {formErrors.confirmPassword && (\r\n                  <span className=\"err\">{formErrors.confirmPassword}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"mr-3\">\r\n                  Language:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <div className=\"form-control border-0 p-0 pt-1\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Phone number:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  name=\"phonenumber\"\r\n                  value={form.phonenumber}\r\n                  onChange={this.validatePhoneNumber}\r\n                />\r\n                {formErrors.phonenumber && (\r\n                  <span className=\"err\">{formErrors.phonenumber}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"mr-3\">\r\n                  Gender:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <div className=\"form-control border-0 p-0 pt-1\">\r\n                  <label className=\"mr-2\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      value=\"male\"\r\n                 \r\n                      onChange={this.setGender}\r\n                    />{\" \"}\r\n                    Male\r\n                  </label>\r\n                  <label className=\"mr-2\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      value=\"female\"\r\n                    \r\n                      onChange={this.setGender}\r\n                    />{\" \"}\r\n                    Female\r\n                  </label>\r\n                  <label className=\"mr-2\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      value=\"other\"\r\n                      \r\n                      onChange={this.setGender}\r\n                    />{\" \"}\r\n                    Other\r\n                  </label>\r\n               \r\n                  {formErrors.gender && (\r\n                  <span style={{clear: \"both\", display: \"block\"}} className=\"err\">{formErrors.gender}</span>\r\n                )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Zip Code:</label>\r\n                <input className=\"form-control\" type=\"text\" name=\"zipCode\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Country:<span className=\"asterisk\">*</span>\r\n                </label>\r\n                <Select name=\"country\" options={countryOptions} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              value=\"Submit\"\r\n              onClick={this.submit}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomForm;\r\n",["38","39"],"C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\UIComponents\\Footer.tsx",[],"C:\\Users\\asequeir\\Documents\\GIT\\2021\\jan\\react-forms-and-validation\\formsapp\\src\\UIComponents\\Header.tsx",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":5,"column":10,"nodeType":"46","messageId":"47","endLine":5,"endColumn":14},{"ruleId":"48","severity":1,"message":"49","line":55,"column":17,"nodeType":"50","messageId":"51","endLine":55,"endColumn":18,"suggestions":"52"},{"ruleId":"48","severity":1,"message":"49","line":55,"column":42,"nodeType":"50","messageId":"51","endLine":55,"endColumn":43,"suggestions":"53"},{"ruleId":"48","severity":1,"message":"49","line":86,"column":35,"nodeType":"50","messageId":"51","endLine":86,"endColumn":36,"suggestions":"54"},{"ruleId":"48","severity":1,"message":"55","line":86,"column":52,"nodeType":"50","messageId":"51","endLine":86,"endColumn":53,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":136,"column":39,"nodeType":"59","messageId":"60","endLine":136,"endColumn":41},{"ruleId":"44","severity":1,"message":"61","line":215,"column":31,"nodeType":"46","messageId":"47","endLine":215,"endColumn":42},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"@typescript-eslint/no-unused-vars","'stat' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["64","65"],["66","67"],["68","69"],"Unnecessary escape character: \\/.",["70","71"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'countryList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"72","fix":"73","desc":"74"},{"messageId":"75","fix":"76","desc":"77"},{"messageId":"72","fix":"78","desc":"74"},{"messageId":"75","fix":"79","desc":"77"},{"messageId":"72","fix":"80","desc":"74"},{"messageId":"75","fix":"81","desc":"77"},{"messageId":"72","fix":"82","desc":"74"},{"messageId":"75","fix":"83","desc":"77"},"removeEscape",{"range":"84","text":"85"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"86","text":"87"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"88","text":"85"},{"range":"89","text":"87"},{"range":"90","text":"85"},{"range":"91","text":"87"},{"range":"92","text":"85"},{"range":"93","text":"87"},[1306,1307],"",[1306,1306],"\\",[1331,1332],[1331,1331],[2187,2188],[2187,2187],[2204,2205],[2204,2204]]